@page
@model HostelManagement.Pages.Hostels.CreateModel

@{
    ViewData["Title"] = "Create";
    var roomCount = 1;
}

<h1>Create</h1>

<h4>Hostel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Hostel.HostelName" class="control-label"></label>
                <input asp-for="Hostel.HostelName" class="form-control" />
                <span asp-validation-for="Hostel.HostelName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Hostel.Description" class="control-label"></label>
                <input asp-for="Hostel.Description" class="form-control" />
                <span asp-validation-for="Hostel.Description" class="text-danger"></span>
            </div>
            <div class="form-group" hidden="hidden">
                <label asp-for="Hostel.Status" class="control-label"></label>
                <input asp-for="Hostel.Status" class="form-control" value="0" readonly />
                <span asp-validation-for="Hostel.Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Hostel.CategoryId" class="control-label"></label>
                <select asp-for="Hostel.CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
            </div>

            <div class="form-group">
                <label class="control-label">Province</label>
                <select id="ProvinceList" asp-items="@ViewBag.ProvinceId" class="form-control">
                    <option>Select Province</option>
                </select>
            </div>
            <div class="form-group">
                <label class="control-label">District</label>
                <select id="DistrictList" class="form-control">
                    <option>Select District</option>
                </select>
            </div>
            <div class="form-group">
                <label class="control-label">Ward</label>
                <select id="WardList" class="form-control" asp-for="Location.WardId">
                    <option>Select Ward</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Location.AddressString" class="control-label"></label>
                <input asp-for="Location.AddressString" class="form-control" />
                <span asp-validation-for="Location.AddressString" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.FileUploads"></label>
                <input asp-for="@Model.FileUploads" />
                <span asp-validation-foraction="@Model.FileUploads"></span>
            </div>

            <!--Room-->
            @for (int i = 0; i < roomCount; i++)
            {
        <div class="roomform">
            <div class="form-group">
                <label asp-for="@Model.Rooms[i].RoomTitle" class="control-label"></label>
                <input asp-for="@Model.Rooms[i].RoomTitle" class="form-control" />
                <span asp-validation-for="@Model.Rooms[i].RoomTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Rooms[i].RoomDescription" class="control-label"></label>
                <input asp-for="@Model.Rooms[i].RoomDescription" class="form-control" />
                <span asp-validation-for="@Model.Rooms[i].RoomDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Rooms[i].RomMaxCapacity" class="control-label"></label>
                <input asp-for="@Model.Rooms[i].RomMaxCapacity" class="form-control" />
                <span asp-validation-for="@Model.Rooms[i].RomMaxCapacity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Rooms[i].RoomCurrentCapacity" class="control-label"></label>
                <input asp-for="@Model.Rooms[i].RoomCurrentCapacity" class="form-control" />
                <span asp-validation-for="@Model.Rooms[i].RoomCurrentCapacity" class="text-danger"></span>
            </div>
            <div class="form-group" hidden="hidden">
                <label asp-for="@Model.Rooms[i].Status" class="control-label"></label>
                <input asp-for="@Model.Rooms[i].Status" class="form-control" value="0" />
                <span asp-validation-for="@Model.Rooms[i].Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Rooms[i].Deposit" class="control-label"></label>
                <input asp-for="@Model.Rooms[i].Deposit" class="form-control" />
                <span asp-validation-for="@Model.Rooms[i].Deposit" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Rooms[i].Price" class="control-label"></label>
                <input asp-for="@Model.Rooms[i].Price" class="form-control" />
                <span asp-validation-for="@Model.Rooms[i].Price" class="text-danger"></span>
            </div>
        </div>
            }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
    document.getElementById('ProvinceList').addEventListener('change', (e) => {
        document.getElementById('DistrictList').innerHTML = "<option value=''>Select District</option>";
        fetch(`?handler=LoadDistrict&ProvinceId=${e.target.value}`)
            .then((response) => {
                return response.json();
            })
            .then((data) => {
                Array.prototype.forEach.call(data, function (item, i) {
                    $("#DistrictList").append(`<option value="${item.districtId}">${item.districtName}</option>`);
                });
            });
    });
    document.getElementById('DistrictList').addEventListener('change', (e) => {
        $("#WardList").empty();
        document.getElementById('WardList').innerHTML = "<option value=''>Select Ward</option>";
        fetch(`?handler=LoadWard&DistrictId=${e.target.value}`)
            .then((response) => {
                return response.json();
            })
            .then((data) => {
                Array.prototype.forEach.call(data, function (item, i) {
                    $("#WardList").append(`<option value="${item.wardId}">${item.wardName}</option>`);
                });
            });
    });
</script>
}
