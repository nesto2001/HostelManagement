@page
@using System.Security.Claims
@model HostelManagement.Pages.Rents.DetailsModel

@{
    string activeNav = "contracts-nav";
    ViewData["Title"] = "Details";
    var role = User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value;
    var sessionUser = User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Email)?.Value;
    var readOnly = "readonly";
}
@if (ViewData["HostelOwnerDashboardMessage"] != null)
{
    <p class="text-danger">@ViewData["HostelOwnerDashboardMessage"]</p>
}
<div class="container main-container mt-5">
    <div class="row">
        <div class="col-md-8 p-0">
            <div>
                <div class="rent-form-wrapper">
                    <h4 class="mb-3"><i class='bx bx-receipt'></i>Renting Details</h4>

                    <div class="form-group" hidden="hidden">
                        <label asp-for="Rent.RoomId" class="control-label"></label>
                        <input asp-for="Rent.RoomId" class="form-control" value="@ViewBag.RoomId" readonly />
                    </div>
                    <div class="form-group">
                        <label asp-for="Rent.RentedBy" class="control-label"></label>
                        <input asp-for="Rent.RentedBy" class="form-control" value="@Model.Rent.RentedByNavigation.UserEmail" readonly />
                    </div>
                    <div class="form-group" hidden="hidden">
                        <label asp-for="Rent.IsDeposited" class="control-label"></label>
                        <input asp-for="Rent.IsDeposited" class="form-control" value="0" readonly />
                        <span asp-validation-for="Rent.IsDeposited" class="text-danger"></span>
                    </div>
                    <div class="form-group" hidden="hidden">
                        <label asp-for="Rent.Status" class="control-label"></label>
                        <input asp-for="Rent.Status" class="form-control" value="0" readonly />
                        <span asp-validation-for="Rent.Status" class="text-danger"></span>
                    </div>
                    <div class="grouped-form">
                        <div class="form-group">
                            <label asp-for="Rent.StartRentDate" class="control-label"></label>
                            <input asp-for="Rent.StartRentDate" class="form-control" type="date" value="@Model.Rent.StartRentDate.Date.ToString("yyyy-MM-dd")" readonly />
                        </div>
                        <div class="form-group">
                            <label asp-for="Rent.EndRentDate" class="control-label"></label>
                            <input asp-for="Rent.EndRentDate" class="form-control" type="date" value="@Model.Rent.EndRentDate.Date.ToString("yyyy-MM-dd")" readonly />
                        </div>
                    </div>
                    <div class="grouped-form status">
                        <div class="form-group">
                            @{
                                var deposit = "";
                                var classStatus = "";
                                switch (Model.Rent.IsDeposited)
                                {
                                    case 1:
                                        deposit = "Pending";
                                        classStatus = "pending";
                                        break;
                                    case 2:
                                        deposit = "Confirm";
                                        classStatus = "active";
                                        break;
                                    default:
                                        deposit = "Not yet";
                                        classStatus = "inactive";
                                        break;
                                }
                            }
                            <label class="control-label">Deposit Status</label>
                            <span class="deposit-status status-@classStatus">@deposit</span>
                            @if (Model.Rent.IsDeposited == 0 && role == "Renter" && Model.Rent.RentedByNavigation.UserEmail.Equals(sessionUser) && Model.Rent.Status != 4)
                            {
                                <div class="btn btn-danger">
                                    <a asp-page-handler="DepositedCheck" asp-route-id="@Model.Rent.RentId">Send Check Deposited</a>
                                </div>
                            }
                            @if (Model.Rent.IsDeposited == 1 && role == "Owner" && Model.Hostel.HostelOwnerEmailNavigation.UserEmail.Equals(sessionUser))
                            {
                                <div class="btn btn-danger">
                                    <a asp-page-handler="DepositedConfirm" asp-route-id="@Model.Rent.RentId">Deposited</a>
                                </div>
                                <div class="btn btn-danger">
                                    <a asp-page-handler="DepositedNone" asp-route-id="@Model.Rent.RentId">None</a>
                                </div>
                            }
                        </div>
                        <div class="form-group">
                            @{
                                var status = "";
                                var classStatus1 = "";
                                switch (Model.Rent.Status)
                                {
                                    case 1:
                                        status = "Active";
                                        classStatus1 = "active";
                                        break;
                                    case 2:
                                        status = "Renewing";
                                        classStatus1 = "active";
                                        break;
                                    case 3:
                                        status = "Ended";
                                        classStatus1 = "denied";
                                        break;
                                    case 4:
                                        status = "Canceled";
                                        classStatus1 = "inactive";
                                        break;
                                    case 5:
                                        status = "Expired";
                                        classStatus1 = "inactive";
                                        break;
                                    case 6:
                                        status = "Terminated";
                                        classStatus1 = "denied";
                                        break;
                                    default:
                                        status = "Pending";
                                        classStatus1 = "pending";
                                        break;
                                }
                            }
                            <label class="control-label">Rental Status</label>
                            <div class="deposit-status status-@classStatus1">@status</div>
                        </div>
                    </div>
                </div>

                <div class="rent-form-wrapper mt-2">
                    <h4 class="mb-3"><i class='bx bx-group'></i>Room Members</h4>
                    @if (Model.Rent.RentedByNavigation.UserEmail.Equals(sessionUser) || role.Equals("Owner"))
                    {
                        @if (Model.Rent.Status == 5 || Model.Rent.Status == 6 || Model.Rent.Status == 4)
                        {
                            readOnly = "readonly";
                        }
                        else readOnly = "";
                    }
                    <div class="grouped-form flex-wrap">
                        @for (int i = 0; i < @Model.Rent.RoomMembers.Count; i++)
                        {
                            @if (Model.Rent.RoomMembers.ElementAt(i) != null && Model.Rent.RoomMembers.ElementAt(i).Status == 1)
                            {
                                
                                var memStatus = "Active";
                                if (Model.Rent.RoomMembers.ElementAt(i) != null && Model.Rent.RoomMembers.ElementAt(i).Status == 0)
                                {
                                    memStatus = "Inactive";
                                }
                                
                                <div class="form-group">
                                    @if (i == 0)
                                    {
                                        <label class="control-label">Member @(i+1) Email</label> <span class="roommem-status status-active">Active</span>
                                        <div class="input-group">
                                            <input value="@Model.Rent.RentedByNavigation.UserEmail" class="form-control" form="rent-form" id="member-@(i+1)" readonly />
                                            <div class="d-flex align-items-center" style="line-height: 38px; border: 1px solid #ccc; border-radius: 0 8px 8px 0;"><i class='bx bx-flag py-0 px-2'></i></div>
                                        </div>
                                    }
                                    else
                                    {
                                        <label class="control-label">Member @(i+1) Email</label> 
                                        @if (Model.Rent.RentedByNavigation.UserEmail.Equals(sessionUser) || role.Equals("Owner"))
                                        {
                                            <span class="roommem-status status-@memStatus.ToLower()">
                                                <a asp-page-handler="ChangePresent" asp-route-id="@Model.Rent.RoomMembers.ElementAt(i).RoomMemberId">@memStatus</a>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="roommem-status status-@memStatus.ToLower()">
                                                @memStatus
                                            </span>
                                        }
                                        <input value="@Model.Rent.RoomMembers.ElementAt(i).UserEmail" class="form-control" form="rent-form" id="member-@(i+1)" readOnly />
                                    }
                                </div>
                            }
                            @*else if (role.Equals("Owner"))
                            {

                                var memStatus = "Active";
                                if (Model.Rent.RoomMembers.ElementAt(i) != null && Model.Rent.RoomMembers.ElementAt(i).Status == 0)
                                {
                                    memStatus = "Inactive";
                                }
                                <div class="form-group">
                                    @if (i == 0)
                                    {
                                        <label class="control-label">Member @(i+1) Email</label> <span class="roommem-status status-active">Active</span>
                                        <div class="input-group">
                                            <input value="@Model.Rent.RentedByNavigation.UserEmail" class="form-control" form="rent-form" id="member-@(i+1)" readonly />
                                            <div class="d-flex align-items-center" style="line-height: 38px; border: 1px solid #ccc; border-radius: 0 8px 8px 0;"><i class='bx bx-flag py-0 px-2'></i></div>
                                        </div>
                                    }
                                    else
                                    {
                                        <label class="control-label">Member @(i+1) Email</label> <span class="roommem-status status-@memStatus.ToLower()"><a asp-page-handler="ChangePresent" asp-route-id="@Model.Rent.RoomMembers.ElementAt(i).RoomMemberId">@memStatus</a></span>
                                        <input value="@Model.Rent.RoomMembers.ElementAt(i).UserEmail" class="form-control" form="rent-form" id="member-@(i+1)"/>
                                    }
                                    
                                </div>
                            }*@
                        }
                        @if (Model.Rent.Status!=6 && Model.Rent.Status!=5 && Model.Rent.Status != 4){
                            @if (Model.Rent.Room.RomMaxCapacity - Model.Rent.Room.RoomCurrentCapacity > 0)
                            {
                                var j=0;
                            
                                @for (int i = (int)Model.Rent.Room.RoomCurrentCapacity; i < Model.Rent.Room.RomMaxCapacity; i++)
                                {
                                
                                    <div class="form-group @readOnly">
                                        <label class="control-label">Member @(i+1) Email</label>
                                        <input asp-for="RoomMember[j].UserEmail" class="form-control" form="updateMem" id="member-@(i+1)"/>
                                    </div>
                                    j++;
                                }                            
                        } 
                        }
                    </div>
                    @if ((Model.Rent.Status != 4 && Model.Rent.Status!=5 && Model.Rent.Status!=6) && (Model.Rent.RentedByNavigation.UserEmail.Equals(sessionUser) || role.Equals("Owner")) )
                    {
                        <button class="btn btn-primary align-self-end" style="height: 40px;" type="submit" form="updateMem" onclick="SubmitMyForm()">Update</button>
                    }
                    <form method="post" asp-page-handler="UpdateMembers" asp-route-id="@Model.Rent.RentId" name="updateMem" id="updateMem"></form>
                    <hr />
                    <h5>Former Room Members</h5>
                    @{
                        var inactiveMems = Model.Rent.RoomMembers.Where(m => m.Status == 0).OrderByDescending(o=>o.RoomMemberId);
                    }
                    @if (inactiveMems!=null && inactiveMems.Count() > 0){
                        <table class="table roommem-table">
                            <thead>
                                <tr>
                                    <td>No</td>
                                    <td>Room Member Email</td>
                                    <td>Status</td>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                
                                    for (int i = 0; i < inactiveMems.Count(); i++)
                                    {
                                        var memStatus = "Active";
                                        if (inactiveMems.ElementAt(i) != null && inactiveMems.ElementAt(i).Status == 0)
                                        {
                                            memStatus = "Inactive";
                                        }
                                        <tr>
                                            <td>@(i+1)</td>
                                            <td>@inactiveMems.ElementAt(i).UserEmail</td>
                                            <td>
                                                @if (Model.Rent.RentedByNavigation.UserEmail.Equals(sessionUser) || role.Equals("Owner"))
                                                {
                                                    <span class="roommem-status status-@memStatus.ToLower()">
                                                        <a asp-page-handler="ChangePresent" asp-route-id="@inactiveMems.ElementAt(i).RoomMemberId">@memStatus</a>
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="roommem-status status-@memStatus.ToLower()">
                                                        @memStatus
                                                    </span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="text-center"><h3>Empty list</h3></div>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-4 px-0">
            <div class="summary-block hostel-summary">
                <div class="hostel-summary-wrapper summary-wrapper">
                    <div class="summary-content">
                        <div class="summary-thumb">
                            @{
                                string hostelThumb = "placeholder.png";
                                if (Model.Hostel.HostelPics.Count > 0)
                                {
                                    hostelThumb = "hostels/" + Model.Hostel.HostelPics.ElementAt(0).HostelPicUrl;
                                }
                            }
                            <div class="summary-thumb-img" style="background-image: url(/images/@hostelThumb);"></div>
                        </div>
                        <div class="summary-info">
                            <div class="summary-hostel-info">
                                <p>@Model.Hostel.HostelName</p>
                                <div class="hostel-info-cate">@Model.Hostel.Category.CategoryName</div>
                                <p class="location">@Model.Hostel.Location.AddressString, @Model.Hostel.Location.Ward.WardName, @Model.Hostel.Location.Ward.District.DistrictName, @Model.Hostel.Location.Ward.District.Province.ProvinceName</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="summary-block room-summary">
                <br>
                <div class="room-summary-title">
                    @Model.Rent.Room.RoomTitle
                </div>
                <hr>
                <div class="summary-content">
                    <div class="summary-thumb">
                        @{
                            string roomThumb = "placeholder.png";
                            if (Model.Room.RoomPics.Count > 0)
                            {
                                roomThumb = "rooms/" + Model.Room.RoomPics.ElementAt(0).RoomPicUrl;
                            }
                        }
                        <div class="summary-thumb-img" style="background-image: url(/images/@roomThumb);"></div>
                    </div>
                    <div class="summary-info">
                        <div class="summary-room-numpeople">
                            <p><i class='bx bx-group'></i> @Model.Room.RomMaxCapacity <text>adult(s)</text></p>
                        </div>
                    </div>
                </div>
                <hr>
                <div class="room-summary-price text-right">
                    <span class="currency">₫</span>@Model.Room.Price<span class="countUnit">/month</span>
                </div>
            </div>

        </div>
    </div>
</div>

@{
    if (User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value == "Owner")
    {
        var lastBill = Model.Rent.StartRentDate;
        if (Model.Rent.Bills.Count() != 0)
        {
            lastBill = (DateTime)Model.Rent.Bills.Max(b => b.CreatedDate);
        }
        if (DateTime.Now.AddMonths(-1) > Model.Rent.StartRentDate && Model.Rent.Status == 1)
        {
            if (lastBill < DateTime.Now.AddDays(-15))
            {
    <div class="text-center mt-2">
                                        <a asp-page="../Bills/Create" asp-route-id="@Model.Rent.RentId" class="btn btn-outline-danger">Generate bill</a>
    </div>
            }
        }
    }

    if (role == "Renter"  && Model.Rent.RentedByNavigation.UserEmail.Equals(sessionUser))
    {
        if (Model.Rent.IsDeposited == 0 && Model.Rent.StartRentDate > DateTime.Now && Model.Rent.Status == 0)
        {
    <div class="btn btn-danger">
                                    <a asp-page="./Delete" asp-route-id="@Model.Rent.RentId">Cancel Rent</a>
    </div>
        }
        if (Model.Rent.EndRentDate >= DateTime.Now.AddDays(3) && Model.Rent.EndRentDate <= DateTime.Now.AddDays(18) && Model.Rent.Status == 1)
        {
    <div class="btn btn-danger">
                                    <a asp-page="./Create" asp-route-id="@Model.Rent.RoomId" asp-route-extend="@Model.Rent.RentId">Extend</a>
    </div>
        }
        if (Model.Rent.StartRentDate < DateTime.Now && Model.Rent.Status == 1 && Model.Rent.EndRentDate > DateTime.Now)
        {
    <div class="btn btn-danger" onsubmit=" alert('You must be logged in to register');return false;">
                                    <a asp-page-handler="Close" asp-route-id="@Model.Rent.RentId">Terminate a contract soon</a>
    </div>
        }
    }
}
<div>
    <hr class="mt-5" />
</div>
@if (Model.Rent.Bills.Count() != 0)
{
    <text>
        <div class="container main-container p-0">
            <h3 class="mb-2">Billing List</h3>
            <div class="bill-list-wrapper">
                <div class="bill-list">
                    @foreach (var item in Model.Rent.Bills)
                    {
                        <div class="bill-card">
                            <div class="bill-info">
                                <div class="bill-no"><a asp-page="../Bills/Details" asp-route-id="@item.BillId">Billing No. @item.BillId</a></div>
                                <div class="bill-issued">Date: @item.CreatedDate</div>
                            </div>
                            <div class="bill-payment text-right">
                                <div class="bill-total"><span class="currency">₫</span>@item.BillDetails.Sum(b => b.Fee)</div>
                                <div class="bill-due">Due: <span class="text-danger"><strong>@item.DueDate</strong></span></div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </text>
}
else
{
    <text>
        <div class="container text-center">
            <h1 class="m-5"><strong style="color: rgb(77, 77, 77);">Bill not found!</strong></h1>
        </div>
    </text>
}
@{
    if (User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value == "Owner" && Model.Hostel.HostelOwnerEmailNavigation.UserEmail.Equals(sessionUser))
    {
        var lastBill = Model.Rent.StartRentDate;
        if (Model.Rent.Bills.Count() != 0)
        {
            lastBill = (DateTime)Model.Rent.Bills.Max(b => b.CreatedDate);
        }
        if (DateTime.Now.AddMonths(-1) > Model.Rent.StartRentDate && Model.Rent.Status == 1)
        {
            if (lastBill < DateTime.Now.AddDays(-15))
            {
    <div class="text-center mt-2">
                            <a asp-page="../Bills/Create" asp-route-id="@Model.Rent.RentId" class="btn btn-outline-danger">Generate bill</a>
    </div>
            }
        }
    }

    if (role == "Renter" && Model.Rent.RentedByNavigation.UserEmail.Equals(sessionUser))
    {
        if (Model.Rent.IsDeposited == 0 && Model.Rent.StartRentDate > DateTime.Now && Model.Rent.Status == 0)
        {
    <div class="btn btn-danger">
                                    <a asp-page="./Delete" asp-route-id="@Model.Rent.RentId">Cancel Rent</a>
    </div>
        }
        if (Model.Rent.EndRentDate >= DateTime.Now.AddDays(3) && Model.Rent.EndRentDate <= DateTime.Now.AddDays(18) && Model.Rent.Status == 1)
        {
    <div class="btn btn-danger">
                                    <a asp-page="./Create" asp-route-id="@Model.Rent.RoomId" asp-route-extend="@Model.Rent.RentId">Extend</a>
    </div>
        }
    }
}

<div>
    <a asp-page="./Index">Back to List</a>
</div>

<style>
    .form-group.readonly{
        display: none;
    }
</style>

@section Scripts {
    <script type="text/javascript">
        $('#@activeNav').addClass('active');

        function SubmitMyForm() {
            document.getElementById("updateMem").submit();
        }
    </script>
}
