
@page
@using System.Security.Claims

@model HostelManagement.Pages.Rents.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Rent List</h1>
<form method="post">
<div class="row select-contract">
    <div class="grouped-form col-6">
        <div class="form-group">
            <label class="control-label">Hostel</label>
            <select id="HostelList" asp-items="@ViewBag.HostelId" class="form-control" name="slHostel">
                <option>Choose Hostel</option>
            </select>
        </div>
        <div class="form-group">
            <label class="control-label">Room</label>
            <select id="RoomList" class="form-control" name="slRoom">
                <option>Select Room</option>
            </select>
        </div>
    </div>
    <div class="col-2 pt-4">
        <button class="btn btn-primary" type="submit">Select</button>
    </div>
</div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Rents.First().IsDeposited)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rents.First().Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rents.First().Total)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rents.First().RentedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rents.First().Room)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rents.First().StartRentDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rents.First().EndRentDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Rents)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IsDeposited)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RentedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Room.RoomId)
            </td>
            <td>
                @item.StartRentDate.ToString("dd-MM-yyyy")
            </td>
            <td>
                @item.EndRentDate.ToString("dd-MM-yyyy")
            </td>
            <td>
                <a asp-page="Details" asp-route-id="@item.RentId">Details</a>
                @if (item.StartRentDate.Day < DateTime.Now.Day && User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value == "Owner")
                {
                    <a asp-page="../Bills/Create" asp-route-id="@item.RentId">Generate bill</a>
                }
                <a asp-page="../Bills/Index" asp-route-id="@item.RentId">Bills</a>
            </td>
        </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    document.getElementById('HostelList').addEventListener('change', (e) => {
        document.getElementById('RoomList').innerHTML = "<option value=''>Select Room</option>";
        fetch(`?handler=LoadRoom&HostelId=${e.target.value}`)
            .then((response) => {
                return response.json();
            })
            .then((data) => {
                Array.prototype.forEach.call(data, function (item, i) {
                    console.log(item);
                    console.log(i);
                    $("#RoomList").append(`<option value="${item.roomId.toString()}">${item.roomName}</option>`);
                });
            });
    });
</script>
}



