
@page
@using System.Security.Claims

@model HostelManagement.Pages.Rents.IndexModel

@{
    string activeNav = "contracts-nav";
    ViewData["Title"] = "Index";
}

<h1 class="pl-4 mt-3">Rent List</h1>
@if (User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value == "Owner")
{
    <form method="post">
        <div class="row select-contract pl-4">
            <div class="grouped-form col-6">
                <div class="form-group">
                    <label class="control-label">Hostel</label>
                    <select id="HostelList" asp-items="@ViewBag.HostelId" class="form-control" name="slHostel">
                        @if (!String.IsNullOrEmpty(@ViewBag.HostelName))
                        {
                            <option>@ViewBag.HostelName</option>
                        }
                        else
                        {
                            <option>Choose Hostel</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label class="control-label">Room</label>
                    <select id="RoomList" class="form-control" name="slRoom">
                        @if (!String.IsNullOrEmpty(@ViewBag.RoomName))
                        {
                            <option>@ViewBag.RoomName</option>
                        }
                        else
                        {
                            <option>Select Room</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-2 pt-4">
                <button class="btn btn-primary" type="submit">Select</button>
            </div>
        </div>
    </form>
}
<table class="table rent-table">
    <thead>
        <tr>
            <th class="col-2 pl-4">
                @Html.DisplayNameFor(model => model.Rents.First().Room)
            </th>
            <th class="col-2">
                @Html.DisplayNameFor(model => model.Rents.First().RentedBy)
            </th>
            <th class="col-1">
                @Html.DisplayNameFor(model => model.Rents.First().StartRentDate)
            </th>
            <th class="col-1">
                @Html.DisplayNameFor(model => model.Rents.First().EndRentDate)
            </th>
            <th class="col-1">
                @Html.DisplayNameFor(model => model.Rents.First().Total)
            </th>
            <th class="col-1 text-center">
                @Html.DisplayNameFor(model => model.Rents.First().IsDeposited)
            </th>
            <th class="col-1 text-center">
                @Html.DisplayNameFor(model => model.Rents.First().Status)
            </th>
            <th class="col-1"></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.Rents)
        {
            <tr onclick="viewDetails(@item.RentId);">
                <td class="pl-4 font-weight-bold">
                    @Html.DisplayFor(modelItem => item.Room.RoomTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RentedBy)
                </td>
                <td>
                    @item.StartRentDate.ToString("dd-MM-yyyy")
                </td>
                <td>
                    @item.EndRentDate.ToString("dd-MM-yyyy")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Total)
                </td>
                <td class="text-center">
                    @{
                        var deposit = "";
                        var classStatus = "";
                        switch (item.IsDeposited)
                        {
                            case 1:
                                deposit = "Pending";
                                classStatus = "pending";
                                break;
                            case 2:
                                deposit = "Confirm";
                                classStatus = "active";
                                break;
                            default:
                                deposit = "Not yet";
                                classStatus = "inactive";
                                break;
                        }
                    }
                    <span class="deposit-status status-@classStatus">@deposit</span>
                </td>
                <td class="text-center">
                    @{
                        var status = "";
                        var classStatus1 = "";
                        switch (item.Status)
                        {
                            case 1:
                                status = "Active";
                                classStatus1 = "active";
                                break;
                            case 2:
                                status = "Renewing";
                                classStatus1 = "active";
                                break;
                            case 3:
                                status = "Ended";
                                classStatus1 = "denied";
                                break;
                            case 4:
                                status = "Canceled";
                                classStatus1 = "inactive";
                                break;
                            case 5:
                                status = "Expired";
                                classStatus1 = "inactive";
                                break;
                            case 6:
                                status = "Terminated";
                                classStatus1 = "denied";
                                break;
                            default:
                                status = "Pending";
                                classStatus1 = "pending";
                                break;
                        }
                    }
                    <span class="deposit-status status-@classStatus1">@status</span>
                </td>




                <td class="col-1">
                    @*<div class="action-btn"><i class='bx bx-dots-vertical-rounded py-0'></i></div>*@
                    <div class="rent-action">
                        @*<a asp-page="../Bills/Index" asp-route-id="@item.RentId">View bills</a>*@
                        @if (User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value == "Owner")
                        {
                            var lastBill = item.StartRentDate;
                            if (item.Bills.Count() != 0)
                            {
                                lastBill = (DateTime)item.Bills.Max(b => b.CreatedDate);
                            }
                            if (DateTime.Now.AddMonths(-1) > item.StartRentDate && item.Status == 1)
                            {
                                if (lastBill < DateTime.Now.AddDays(-15))
                                {
                                    <button class="btn btn-primary">
                                        <a asp-page="../Bills/Create" asp-route-id="@item.RentId">Generate bill</a>
                                    </button>
                                }
                            }
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>   

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $('#@activeNav').addClass('active');
        document.getElementById('HostelList').addEventListener('change', (e) => {
            document.getElementById('RoomList').innerHTML = "<option value=''>Select Room</option>";
            fetch(`?handler=LoadRoom&HostelId=${e.target.value}`)
                .then((response) => {
                    return response.json();
                })
                .then((data) => {
                    Array.prototype.forEach.call(data, function (item, i) {
                        console.log(item);
                        console.log(i);
                        $("#RoomList").append(`<option value="${item.roomId.toString()}">${item.roomName}</option>`);
                    });
                });
        });

        $('.action-btn').click(function () {
            console.log(event.target.closest('div'))
            event.target.closest('div').querySelector('.rent-action').show();
        })

        $('.rent-action').on('onMouseOff', function () {
            event.target.closest('div').querySelector('.rent-action').hide();
        })

    function viewDetails(id) {
        if (id != undefined && id != null) {
            window.location = '../Rents/Details?id=' + id;
        }
    }
    </script>
}



